#!/usr/bin/env python

import argparse
import sys

sys.path.append("..")

from vqc_pennylane.train import main
parser = argparse.ArgumentParser(formatter_class=argparse.
                                 ArgumentDefaultsHelpFormatter)
parser.add_argument("--data_folder", type=str, default='../../data/input_ae/',
                    help="The folder where the data is stored on the system.")
parser.add_argument("--norm", type=str, default='minmax',
                    help="The name of the normalisation that you'll to use.")
parser.add_argument("--nevents", type=str, default='7.20e+05',
                    help="The number of events of the norm file.")
parser.add_argument('--model_path', type=str, required=True,
                    help="The path to the Auto-Encoder model.")
parser.add_argument('--output_folder', required=True,
                    help='The name of the model to be saved.')
parser.add_argument('--nqubits', type=int, required=True, default=4,
                    help="The number of qubits that the vqc circuit will use.")
parser.add_argument('--optimiser', default=None,
                    help='The optimiser used for training the model.')
parser.add_argument('--epochs', type=int, default=100,
                    help="The number of epochs to train the vqc for.")
parser.add_argument('--batch_size', type=int, default=50,
                    help="The batch size to train the vqc with.")

args = parser.parse_args()

args = {
    "data_folder": args.data_folder,
    "norm": args.norm,
    "nevents": args.nevents,
    "ae_model_path": args.model_path,
    "outdir": args.output_folder,
    "nqubits": args.nqubits,
    "optimiser": args.optimiser,
    "epochs": args.epochs,
    "batch_size": args.batch_size,
    "train_events": 250,
    "valid_events": 250,
}

main(args)
